/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gskproject;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Malinda
 */
public class Notification extends javax.swing.JFrame {

    /**
     * Creates new form Notification
     */
    //declare data structures to hols notification table dada
    static Vector<Vector> table;
    static ArrayList<Integer[]> columnData;
    DBOperations dbOps=new DBOperations();
    boolean isAdmin;
    
    public Notification() {
        initComponents();
        setIcon();
        tableLoad();
    }
    //load notification table
    void tableLoad(){
        if(dbOps.isAdmin()==1){
            isAdmin=true;
            Object[] set = DBOperations.getNotiTableAsAdmin(GskProject.currentUserID);
            table = (Vector<Vector>) set[0];//get data from database and cast to result output to Vector
            columnData = (ArrayList<Integer[]>) set[1];//get data from database and cast to result output to arraylist
            Vector<String> columnNames = new Vector<String>();//set table column
            columnNames.addElement("Notification");
            tblNotification.setModel(new DefaultTableModel(table, columnNames));//load notification table
        } else if (dbOps.isAdmin()==0) {
            isAdmin=false;
            Object[] set = DBOperations.getNotiTableAsResponsible(GskProject.currentUserID);
            table = (Vector<Vector>) set[0];//get data from database and cast to result output to Vector
            columnData = (ArrayList<Integer[]>) set[1];//get data from database and cast to result output to arraylist
            Vector<String> columnNames = new Vector<String>();//set table column
            columnNames.addElement("Notification");
            tblNotification.setModel(new DefaultTableModel(table, columnNames));//load notification table
        }else{
            JOptionPane.showMessageDialog(this,"Error occur while check is admin!");
        }
    }
    //set gsk logo for title bar
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icon.png")));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotification = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notifications");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Notification.png"))); // NOI18N
        jLabel1.setText("   Notifications");

        tblNotification.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Notification"
            }
        ));
        jScrollPane1.setViewportView(tblNotification);

        jButton1.setText("Check");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(199, 199, 199)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(76, 76, 76)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (tblNotification.getSelectedRow() != -1) {//check click a notification on notification table
            if(isAdmin){
                if (columnData.get(tblNotification.getSelectedRow())[2] ==2) {
                    Cases cases=new Cases();
                    cases.loadTable();
                    int obID = columnData.get(tblNotification.getSelectedRow())[1];
                    int row=cases.getSelectedRow(obID);
                    cases.setSelectedRow(row);
                    cases.setVisible(true);
                    this.dispose();
                    int notiID = columnData.get(tblNotification.getSelectedRow())[0];
                    if (!dbOps.removeNotiAfterAdminCheck1(notiID)) {//remove checked notification from table
                        JOptionPane.showMessageDialog(this, "Error occur while remove notification!");
                    }  
                } else {
                    RelatedCases rCases = new RelatedCases();
                    //get select row number
                    int obID = columnData.get(tblNotification.getSelectedRow())[1];
                    
                    if (columnData.get(tblNotification.getSelectedRow())[2] == 0) {
                        int row = rCases.getSelectedRow(obID);
                        rCases.setSelectedRow(row);
                    } else {
                        int row = rCases.getSelectedRowTableOb(obID);
                        rCases.setSelectedRowTableOb(row);
                    }
                    
                    rCases.setVisible(true);
                    this.dispose();
                    int notiID = columnData.get(tblNotification.getSelectedRow())[0];
                    if (!dbOps.removeNotiAfterAdminCheck2(notiID)) {//remove checked notification from table
                        JOptionPane.showMessageDialog(this, "Error occur while remove notification!");
                    }
                }
            } else {
                RelatedCases rCases = new RelatedCases();
                //get select row number
                int obID = columnData.get(tblNotification.getSelectedRow())[1];
                if(columnData.get(tblNotification.getSelectedRow())[2]==0){
                    int row = rCases.getSelectedRow(obID);
                    rCases.setSelectedRow(row);
                }else{
                    int row = rCases.getSelectedRowTableOb(obID);
                    rCases.setSelectedRowTableOb(row);
                }
                rCases.setVisible(true);
                this.dispose();
                int notiID = columnData.get(tblNotification.getSelectedRow())[0];
                if (!dbOps.removeNotiAfterResCheck(notiID, GskProject.currentUserID)) {//remove checked notification from table
                    JOptionPane.showMessageDialog(this, "Error occur while remove notification!");
                }
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please Select a Notification!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNotification;
    // End of variables declaration//GEN-END:variables
}
